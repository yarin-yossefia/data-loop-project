apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
      annotations:
        vault.hashicorp.com/agent-inject: "true"
        # שינוי כאן: מציין את שיטת האימות approle ואת שם ה-Role
        vault.hashicorp.com/auth-methods: "approle"
        vault.hashicorp.com/auth-method-approle-role: "backend-approle-role" # השם של ה-AppRole שיצרת ב-Vault
        # הזרקת ה-Secret מ-Vault כקובץ URL (כמו קודם)
        vault.hashicorp.com/agent-inject-template-mongo-url: |
          {{- with secret "database/creds/backend-app" -}}
          mongodb://{{ .Data.username }}:{{ .Data.password }}@mongo.services.svc.cluster.local:27017/taskdb?authSource=admin
          {{- end -}}
    spec:
      containers:
      - name: backend
        image: {{ .Values.backend.image }}
        ports:
        - containerPort: {{ .Values.backend.port }}
        env:
        # הוסף את משתני הסביבה האלה עבור AppRole
        - name: VAULT_ADDR # כתובת ה-Vault, וודא שהיא נגישה מתוך הפוד
          value: "http://vault.default.svc.cluster.local:8200" # דוגמה לכתובת Vault פנימית בקוברנטס
        - name: VAULT_AUTH_METHOD
          value: "approle"
        - name: VAULT_ROLE_ID
          value: "<ה-ROLE_ID שקיבלת בשלב 3>"
        - name: VAULT_SECRET_ID_PATH # הנתיב שבו ה-secret_id יוזרק מה-Kubernetes Secret
          value: "/var/run/secrets/kubernetes.io/vault/secret_id"
        - name: MONGO_URL
          value: "file:///vault/secrets/mongo-url" # ה-Vault Agent ייצור קובץ בשם mongo-url בנתיב זה
        volumeMounts:
        - name: approle-secret-volume
          mountPath: "/var/run/secrets/kubernetes.io/vault"
          readOnly: true
      volumes:
      - name: approle-secret-volume
        secret:
          secretName: backend-approle-secret # שם ה-Kubernetes Secret שיצרת בשלב 5